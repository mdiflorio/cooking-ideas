{"version":3,"sources":["assets/recipes.js","modules/recipes.js","components/IngredientsList/index.js","components/AddItem/index.js","App.js","serviceWorker.js","index.js"],"names":["assets_recipes","name","ingredients","type","amount","addRecipeToList","list","recipe","recipes","indexOf","push","i","length","_recipe$ingredients$i","checkNested","concat","obj","args","Array","prototype","slice","call","arguments","hasOwnProperty","IngredientsList","_ref","react_default","a","createElement","Segment","map","key","Object","keys","index","style","margin","cellSpacing","width","item","className","textAlign","AddItem","state","handleChange","e","value","_this","setState","handleSubmit","props","onSubmit","organisedData","_this$props","this","text","Dropdown","placeholder","fluid","search","selection","onChange","options","Button","color","onClick","Component","App","numberOfRecipes","ingredientsList","onSubmitRandomSelection","undefined","Number","alreadyAddedRecipes","recipeIndex","Math","floor","random","Recipes","onSubmitAddItem","recipeName","recipeWithIngredients","recipesData","find","_this2","Input","focus","step","event","target","components_AddItem","IngredientsList_IngredientsList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbfb63f0.chunk.js","sourcesContent":["export default [\n  {\n    name: \"Zucchini lasagne\",\n    ingredients: [\n      { type: \"Vegetables\", name: \"Zucchini\", amount: 4 },\n      { type: \"Cans\", name: \"Tomato sauce in a can\", amount: 1.5 },\n      { type: \"Refrigerated\", name: \"Mozzarella\", amount: 1 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 3 },\n      { type: \"Refrigerated\", name: \"Parmigiano\", amount: 1 },\n      { type: \"Spices\", name: \"Basil\", amount: 1 },\n      { type: \"Spices\", name: \"Origano\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Tortillas\",\n    ingredients: [\n      { type: \"Bakery\", name: \"Tortillas\", amount: 1 },\n      { type: \"Cans\", name: \"Tomato sauce in a can\", amount: 1 },\n      { type: \"Cans\", name: \"Beans in a can\", amount: 1 },\n      { type: \"Cans\", name: \"Corn in a can\", amount: 1 },\n      { type: \"Cans\", name: \"Tomato concentrate\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Gruyère rapé\", amount: 1 },\n      { type: \"Spices\", name: \"Paprika\", amount: 1 },\n      { type: \"Vegetables\", name: \"Parsley\", amount: 1 },\n      { type: \"Vegetables\", name: \"Avocado\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Sour cream\", amount: 1 },\n      { type: \"Vegetables\", name: \"Lemon\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Mushroom Ricotta Spinach Pie\",\n    ingredients: [\n      { type: \"Refrigerated\", name: \"Pate feuillete\", amount: 2 },\n      { type: \"Vegetables\", name: \"Mushrooms\", amount: 1 },\n      { type: \"Vegetables\", name: \"Spinach\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Ricotta\", amount: 1 },\n      { type: \"Spices\", name: \"Nutmeg\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Spaghetti with Garlic and Chilli\",\n    ingredients: [\n      { type: \"Pasta\", name: \"Spaghetti\", amount: 1 },\n      { type: \"Vegetables\", name: \"Chilli\", amount: 1 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 4 },\n      { type: \"Refrigerated\", name: \"(Optional) Parmigiano\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Lebanese Meze\",\n    ingredients: [\n      { type: \"Flour\", name: \"Flour\", amount: 1 },\n      { type: \"Flour\", name: \"Yeast\", amount: 1 },\n      { type: \"Vegetables\", name: \"Eggplant\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Greek Yogurt\", amount: 1 },\n      { type: \"Vegetables\", name: \"Lemon juice\", amount: 1 },\n      { type: \"Bio\", name: \"Pine nuts\", amount: 1 },\n      { type: \"Vegetables\", name: \"Mint\", amount: 1 },\n      { type: \"Vegetables\", name: \"Parsley\", amount: 1 },\n      { type: \"Bio\", name: \"Sesame seeds\", amount: 1 },\n      { type: \"Flour\", name: \"Spoon of sugar\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Potato bake (Cat version)\",\n    ingredients: [\n      { type: \"Vegetables\", name: \"Potatoes\", amount: 5 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 4 },\n      { type: \"Refrigerated\", name: \"Milk\", amount: 1.5 },\n      { type: \"Refrigerated\", name: \"Cream\", amount: 1 },\n      { type: \"Spices\", name: \"Nutmeg\", amount: 1 },\n      { type: \"Vegetables\", name: \"Ciboulette\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Potato bake (Douds mums version)\",\n    ingredients: [\n      { type: \"Vegetables\", name: \"Potatoes\", amount: 5 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 4 },\n      { type: \"Refrigerated\", name: \"Milk\", amount: 1.5 },\n      { type: \"Refrigerated\", name: \"Mozzarella\", amount: 1 },\n      { type: \"Spices\", name: \"Tumeric\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Vegetable bake with Vegie burger / steak\",\n    ingredients: [\n      { type: \"Vegetables\", name: \"Zucchini\", amount: 2 },\n      { type: \"Vegetables\", name: \"Tomatoes\", amount: 5 },\n      { type: \"Refrigerated\", name: \"Mozzarella\", amount: 1 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 3 },\n      { type: \"Vegetables\", name: \"Ciboulette\", amount: 1 },\n      { type: \"Spices\", name: \"Origano\", amount: 1 },\n      { type: \"Cans\", name: \"Can of beans\", amount: 1 },\n      { type: \"Flour\", name: \"Flour\", amount: 0.1 },\n      { type: \"Spices\", name: \"Spices\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Steak\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Mushroom soup\",\n    ingredients: [\n      { type: \"Vegetables\", name: \"Mushrooms\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Butter\", amount: 1 },\n      { type: \"Soup\", name: \"Vegetable stock cube\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Cream\", amount: 1 },\n      { type: \"Vegetables\", name: \"Ciboulette / Parsley\", amount: 1 },\n      { type: \"Bakery\", name: \"Baguette\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Cheese\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Potato and coconut milk soup\",\n    ingredients: [\n      { type: \"Vegetables\", name: \"Potatoes\", amount: 3 },\n      { type: \"Asian\", name: \"Coconut milk in can\", amount: 1 },\n      { type: \"Soup\", name: \"Vegetable stock cube\", amount: 1 },\n      { type: \"Spices\", name: \"Spices\", amount: 1 },\n      { type: \"Bakery\", name: \"Baguette\", amount: 1 },\n      { type: \"Refrigerated\", name: \"Cheese\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Pasta with vegetables\",\n    ingredients: [\n      { type: \"Pasta\", name: \"Pasta\", amount: 1 },\n      { type: \"Vegetables\", name: \"Tomatoes\", amount: 1 },\n      { type: \"Vegetables\", name: \"Mushrooms / Zucchinis\", amount: 1 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 3 },\n      { type: \"Spices\", name: \"Spices\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Noodles stir-fry\",\n    ingredients: [\n      { type: \"Pasta\", name: \"Rice or Wheat Noodles\", amount: 1 },\n      { type: \"Vegetables\", name: \"Mix of Asian Vegetables\", amount: 1 },\n      { type: \"Vegetables\", name: \"Mushrooms\", amount: 1 },\n      { type: \"Asian\", name: \"Soya Sauce\", amount: 1 },\n      { type: \"Vegetables\", name: \"Ginger\", amount: 1 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 2 },\n      { type: \"Vegetables\", name: \"Coriander\", amount: 2 },\n      { type: \"Vegetables\", name: \"Chilli\", amount: 1 }\n    ]\n  },\n  {\n    name: \"Noodles Soup\",\n    ingredients: [\n      { type: \"Asian\", name: \"Rice Noodles\", amount: 1 },\n      { type: \"Vegetables\", name: \"Chinese Mushrooms\", amount: 1 },\n      { type: \"Vegetables\", name: \"Carrots\", amount: 1 },\n      { type: \"Vegetables\", name: \"Radish\", amount: 2 },\n      { type: \"Asian\", name: \"Soya Sauce\", amount: 1 },\n      { type: \"Vegetables\", name: \"Ginger\", amount: 1 },\n      { type: \"Vegetables\", name: \"Garlic\", amount: 2 },\n      { type: \"Vegetables\", name: \"Coriander\", amount: 2 },\n      { type: \"Vegetables\", name: \"Chilli\", amount: 1 },\n      { type: \"Vegetables\", name: \"Haricots coco\", amount: 1 }\n    ]\n  }\n];\n","import recipes from \"../assets/recipes\";\n\nexport function generateRandomList(numberOfRecipes = 1) {\n  if (numberOfRecipes === \"\") {\n    numberOfRecipes = 1;\n  } else {\n    numberOfRecipes = Number(numberOfRecipes);\n  }\n\n  let list = {\n    recipes: [],\n    ingredients: {}\n  };\n\n  let alreadyAddedRecipes = [];\n\n  for (let i = 0; i < numberOfRecipes; i++) {\n    let recipeIndex;\n\n    do {\n      // Get a random recipe in list.\n      recipeIndex = Math.floor(Math.random() * recipes.length);\n\n      // Make sure that the recipe isn't already added to the list.\n    } while (alreadyAddedRecipes.indexOf(recipeIndex) !== -1);\n\n    alreadyAddedRecipes.push(recipeIndex);\n\n    //   console.log(recipes[recipeIndex])\n\n    list = addRecipeToList(list, recipes[recipeIndex]);\n  }\n\n  return list;\n}\n\nexport function addRecipeToList(list, recipe) {\n  // Stop if recipe has already been added to the list.\n  if (list.recipes.indexOf(recipe.name) !== -1) return list;\n\n  // Add name\n  list.recipes.push(recipe.name);\n\n  // Add ingredients to list.\n  for (let i = 0; i < recipe.ingredients.length; i++) {\n    const { type, name, amount } = recipe.ingredients[i];\n\n    // Checks if type exists in list\n    if (checkNested(list.ingredients, type)) {\n      // Checks if ingredient name exists in list\n      if (checkNested(list.ingredients, type, name)) {\n        list.ingredients[type][`${name}`] += amount;\n      }\n      // Add ingredient name and amount to list.\n      else {\n        list.ingredients[type][`${name}`] = amount;\n      }\n    } else {\n      // Type and name not already stored in list. Create both.\n      list.ingredients[type] = {};\n      list.ingredients[type][name] = amount;\n    }\n  }\n\n  return list;\n}\n\nexport function deleteRecipeFromList(list, recipe) {\n  // Add name\n  list.recipes.push(recipe.name);\n\n  // Add ingredients to list.\n  for (let i = 0; i < recipe.ingredients.length; i++) {\n    const { type, name, amount } = recipe.ingredients[i];\n\n    // Checks if type exists in list\n    if (checkNested(list.ingredients, type)) {\n      // Checks if ingredient name exists in list\n      if (checkNested(list.ingredients, type, name)) {\n        list.ingredients[type][`${name}`] += amount;\n      }\n      // Add ingredient name and amount to list.\n      else {\n        list.ingredients[type][`${name}`] = amount;\n      }\n    } else {\n      // Type and name not already stored in list. Create both.\n      list.ingredients[type] = {};\n      list.ingredients[type][name] = amount;\n    }\n  }\n\n  return list;\n}\n\nfunction checkNested(obj /*, level1, level2, ... levelN*/) {\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  for (var i = 0; i < args.length; i++) {\n    if (!obj || !obj.hasOwnProperty(args[i])) {\n      return false;\n    }\n    obj = obj[args[i]];\n  }\n  return true;\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport { Segment } from \"semantic-ui-react\";\n\nexport const IngredientsList = ({ list }) => {\n  return (\n    <div>\n      <h2>Ingredients List</h2>\n      <Segment>\n        <h3>Recipes</h3>\n        <ul>\n          {list.recipes.map(recipe => (\n            <li key={recipe}>{recipe}</li>\n          ))}\n        </ul>\n        <h3>Ingredients by Category</h3>\n        {Object.keys(list.ingredients).map((type, index) => (\n          <div>\n            <h4 style={{ margin: 0 }}>{type}</h4>\n            <table cellSpacing=\"0\" style={{ width: \"100%\" }}>\n              <tbody>\n                {Object.keys(list.ingredients[type]).map((item, index) => (\n                  <tr>\n                    <td className=\"bottomBorder\">{item}</td>\n                    <td\n                      className=\"bottomBorder\"\n                      style={{\n                        textAlign: \"right\"\n                      }}\n                    >\n                      {list.ingredients[type][item]}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <br />\n          </div>\n        ))}\n      </Segment>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Dropdown, Button } from \"semantic-ui-react\";\n\nclass AddItem extends Component {\n  state = {\n    recipe: \"\"\n  };\n\n  handleChange = (e, { value }) => this.setState({ recipe: value });\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.recipe);\n  };\n\n  render() {\n    let organisedData = [];\n    const { recipes, onSubmit } = this.props;\n    for (let i in recipes) {\n      organisedData.push({\n        key: recipes[i].name,\n        value: recipes[i].name,\n        text: recipes[i].name\n      });\n    }\n\n    return (\n      <div>\n        <h2>Add recipes to list</h2>\n        <p>Select recipes to add to the ingredients list</p>\n        <Dropdown\n          placeholder=\"Select recipe\"\n          fluid\n          search\n          selection\n          onChange={this.handleChange}\n          options={organisedData}\n        />\n        <br />\n        <Button fluid color=\"teal\" onClick={this.handleSubmit}>\n          Add recipe to list\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default AddItem;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport * as Recipes from \"./modules/recipes\";\nimport recipesData from \"./assets/recipes\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport { IngredientsList } from \"./components/IngredientsList\";\nimport AddItem from \"./components/AddItem\";\n\nclass App extends Component {\n  state = {\n    numberOfRecipes: \"\",\n    ingredientsList: {\n      recipes: [],\n      ingredients: {}\n    }\n  };\n\n  onSubmitRandomSelection = () => {\n    const ingredientsList = Recipes.generateRandomList(\n      this.state.numberOfRecipes\n    );\n    this.setState({ ingredientsList });\n  };\n\n  onSubmitAddItem = recipeName => {\n    const recipeWithIngredients = recipesData.find(\n      recipe => recipe.name === recipeName\n    );\n\n    const ingredientsList = Recipes.addRecipeToList(\n      this.state.ingredientsList,\n      recipeWithIngredients\n    );\n    this.setState({ ingredientsList });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Container\">\n          <h2>Recipes</h2>\n          <p>Generate ingredients list from a random selection of recipes.</p>\n          <Input\n            fluid\n            focus\n            type=\"number\"\n            step=\"1\"\n            value={this.state.numberOfRecipes}\n            placeholder=\"Enter number of recipes...\"\n            onChange={event => {\n              this.setState({ numberOfRecipes: event.target.value });\n            }}\n          />\n          <br />\n          <Button fluid color=\"blue\" onClick={this.onSubmitRandomSelection}>\n            Generate random list\n          </Button>\n          <br />\n\n          <AddItem recipes={recipesData} onSubmit={this.onSubmitAddItem} />\n          <br />\n          {this.state.ingredientsList.recipes.length > 0 && (\n            <IngredientsList list={this.state.ingredientsList} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}